name: WJ-V Pub Tests

on:
  pull_request:
    branches: [main, master]
  push:
    branches: [ main ]
  schedule:
    - cron: '0 5 * * *'  # Runs at 5 AM UTC every day

env:
  TEST_ENV: stage
  NUM_RETRIES: 2
  SLOW_MODE_DELAY_IN_MS: 100
  CI: 'true'

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  test:
    name: Run Playwright Tests (${{ matrix.test-group }})
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.44.1-focal
    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        test-group: [
          "derivedScores",
          "testDe",
          "singleTable"
        ]
        include:
          - test-group: "derivedScores"
            grep-pattern: "(?=.*@derivedScores)(?=.*@OVSYN)"
          - test-group: "testDe"
            grep-pattern: "(?=.*@testDe)(?=.*@GS)"
          - test-group: "singleTable"
            grep-pattern: "(?=.*@singleTable)(?=.*@OVANT)"

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright
        run: npx playwright install chrome
        
      - name: Run Playwright tests
        id: run_tests
        continue-on-error: true  # Allow the step to fail but continue
        run: |
          export PLAYWRIGHT_WORKERS=1
          npx cross-env test=${{ env.TEST_ENV }} npx playwright test --grep "${{ matrix.grep-pattern }}" --project=chrome --workers=1
        
      - name: Upload test results
        if: always()  # Upload results whether tests pass or fail
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ matrix.test-group }}
          path: |
            playwright-report/
            test-results/
          retention-days: 30

      # Create a status file to indicate test result
      - name: Create status file
        if: always()
        run: |
          mkdir -p test-status
          echo "${{ steps.run_tests.outcome }}" > test-status/status.txt

      - name: Upload status
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-status-${{ matrix.test-group }}
          path: test-status/
          retention-days: 30

  merge-reports:
    name: Merge Reports
    if: always()  # Run even if test jobs fail
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: all-artifacts

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Create merged report directory
        run: |
          mkdir -p merged-report
          current_date=$(date +%Y-%m-%d_%H-%M-%S)
          
          # Create index.html with enhanced styling
          cat << EOF > merged-report/index.html
          <!DOCTYPE html>
          <html>
          <head>
            <title>Playwright Test Reports</title>
            <style>
              body { font-family: Arial, sans-serif; margin: 20px; max-width: 1200px; margin: 0 auto; padding: 20px; }
              h1 { color: #333; border-bottom: 2px solid #eee; padding-bottom: 10px; }
              .report-container { margin: 20px 0; }
              .report-link { 
                display: block;
                margin: 10px 0;
                padding: 15px;
                background: #f5f5f5;
                border-radius: 8px;
                text-decoration: none;
                color: #666;
                position: relative;
              }
              .report-link:hover { background: #e5e5e5; }
              .status-badge {
                position: absolute;
                right: 15px;
                top: 50%;
                transform: translateY(-50%);
                padding: 5px 10px;
                border-radius: 15px;
                font-size: 0.9em;
              }
              .status-success { background: #e6ffe6; color: #006600; }
              .status-failure { background: #ffe6e6; color: #cc0000; }
              .timestamp { color: #999; font-size: 0.9em; margin-bottom: 20px; }
            </style>
          </head>
          <body>
            <h1>Playwright Test Reports</h1>
            <p class="timestamp">Last updated: $current_date</p>
            <div class="report-container">
          EOF
          
          # Process each report directory and status
          for test_group in "derivedScores" "testDe" "singleTable"; do
            report_dir="all-artifacts/playwright-report-$test_group"
            status_file="all-artifacts/test-status-$test_group/status.txt"
            
            if [ -d "$report_dir" ]; then
              mkdir -p "merged-report/$test_group"
              cp -r "$report_dir"/* "merged-report/$test_group/"
              
              # Read test status
              status="N/A"
              status_class="status-neutral"
              if [ -f "$status_file" ]; then
                status=$(cat "$status_file")
                if [ "$status" = "success" ]; then
                  status_class="status-success"
                else
                  status_class="status-failure"
                fi
              fi
              
              echo "<a href='./$test_group/index.html' class='report-link'>
                Test Report: $test_group
                <span class='status-badge ${status_class}'>$status</span>
              </a>" >> merged-report/index.html
            fi
          done
          
          echo "</div></body></html>" >> merged-report/index.html

      - name: Upload merged report artifact
        uses: actions/upload-artifact@v4
        with:
          name: merged-playwright-report
          path: merged-report/
          retention-days: 30

  deploy-report:
    name: Deploy Report to GitHub Pages
    if: always()  # Run even if previous jobs fail
    needs: merge-reports
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Download merged report
        uses: actions/download-artifact@v4
        with:
          name: merged-playwright-report
          path: merged-report

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: merged-report

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4